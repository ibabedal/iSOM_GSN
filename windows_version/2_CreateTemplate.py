if __name__ == "__main__":  
#    run_colorsExample()
    import pandas as pd
    import networkx as nx
	import SimpSOM as sps
    
    from sklearn.preprocessing import MinMaxScaler
    pathGE = "C:\\PR_Proj_Thesis\\NEW_SOM_Approach\\BRCA\\GE_withstage_20.csv"
    # Read file 
    df = pd.read_csv(pathGE)
    # Fill na 
    df.fillna(0,inplace = True)
    labels_old = df['TUMOR_STAGE'].values
    df.drop(['TUMOR_STAGE','PATIENT_ID'],axis =1,inplace = True)
    raw_data = df.values
    #Create transpose ; such that each column is one patient
    raw_data = raw_data.T
    
    # applying scaling to make values between some range 0-1/-1-2 ,as need for Kohens SOM
    scaler = MinMaxScaler(copy=True, feature_range=(0, 1))    
    scaler.fit(raw_data)    
    raw_data= scaler.transform(raw_data)
    
    ht = 10
    wd = 10
    no_of_epocs =5
    
    net = sps.somNet(ht,wd, raw_data, PBC=False)

    net.colorEx=False
    
    Learning_rate = 0.05
    net.PCI=True #The weights will be initialised with PCA.
    net.train(Learning_rate,no_of_epocs)   
    col_num = raw_data.shape[0]
    
    node_list = [i for i in range(col_num)]
    new_lbl = [str(j) for j in range(col_num)]
    #new_lbl
#    bmu = net.project(raw_data, labels=new_lbl,name ='SOM',path=p)
    bmu = net.project(raw_data, labels=new_lbl,name ='SOM')
    #print(bmu)
    pos = bmu 
    #pos = [[3.5, 4.330127018922194], [8, 0.0], [9.5, 7.794228634059948], [8.5, 6.062177826491071], [1.5, 7.794228634059948], [3.5, 0.8660254037844388], [6, 0.0], [0, 6.9282032302755105], [8, 1.7320508075688776], [7, 3.4641016151377553], [4.5, 7.794228634059948], [0, 0.0], [9, 0.0], [4, 0.0], [9, 0.0]]
    G=nx.chvatal_graph() 
    nx.draw_networkx_nodes(G,pos,
                       nodelist=node_list,
                       node_color = 'w',
                       edgecolors = [0,0,0],
#                       node_color=[[1,1,0],[1,1,0],[1,1,0],[1,1,0],[1,1,0],'b','r','c','y','k','m'],
#                       node_color=[[1,1,0],[1,1,0],[1,1,0],[1,1,0],[1,1,0],'b','r','c','y','k','m'],
                       node_size=1000,alpha=0.8)
    #nx.draw_networkx_edges(G,pos,width=1.0,alpha=0.5)

    new_lbl_dict = dict(enumerate(new_lbl))
    nx.draw_networkx_labels(G,pos,new_lbl_dict,font_size=10)
    
    plt.axis('on')
    plt.show()
    print("EPOCHS  = " , no_of_epocs)
    print("POS = " , pos)
#    plt.savefig('Template.png', bbox_inches='tight', dpi=72)
    print('***************************DONE!!*****************************')